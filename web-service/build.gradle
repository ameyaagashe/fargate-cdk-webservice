apply plugin: 'java'
apply plugin: 'maven'

group = 'com.budilov'
version = '1.0-SNAPSHOT'

description = """search-service"""


sourceCompatibility = 11
targetCompatibility = 11
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    ext.jest_version = '2.0.3'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
        classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
    }
}

apply plugin: 'kotlin'
apply plugin: "io.spring.dependency-management"
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: "de.sebastianboegl.shadow.transformer.log4j"

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url "https://dl.bintray.com/kotlin/exposed" }
    jcenter()
    maven { url 'https://maven.icosillion.com/artifactory/open-source/' }
}

jar {
    // Not really needed here
    manifest {
        attributes 'Main-Class': 'com.budilov.search.endpoints.Http4KEndpointKt'
    }
    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

}

//jar {
//    manifest {
//        attributes 'Main-Class': 'com.brainyninja.service.InitialFeedLoaderKt'
//    }
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
//}

dependencies {

    def aws_sdk_version = '1.11.827'
    def http4k_version = '3.254.0'

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.72'

    // AWS
    compile group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-aws-sdk-v2', version: '2.6.1'
    compile group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-core', version: '2.6.1'
    compile "com.amazonaws:aws-java-sdk-cognitoidentity:${aws_sdk_version}"
    compile group: 'com.amazonaws', name: 'aws-java-sdk-ssm', version: "${aws_sdk_version}"
    compile group: 'software.amazon.awssdk', name: 'dynamodb', version: '2.13.61'

    //JWT
    compile "com.auth0:java-jwt:3.8.2"
    compile 'com.auth0:jwks-rsa:0.8.3'

    // Gson
    compile 'com.google.code.gson:gson:2.8.6'

    // Http4K
    compile group: "org.http4k", name: "http4k-core", version: "$http4k_version"
    compile group: "org.http4k", name: "http4k-server-jetty", version: "$http4k_version"
    compile group: "org.http4k", name: "http4k-client-okhttp", version: "$http4k_version"
    compile group: "org.http4k", name: "http4k-client-apache", version: "$http4k_version"
    compile group: "org.http4k", name: "http4k-metrics-micrometer", version: "$http4k_version"

    // Logging
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.26'

    // ElasticSearch
    compile "org.elasticsearch.client:elasticsearch-rest-high-level-client:7.4.0"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'

    // RSS
    compile 'com.icosillion.podengine:podengine:2.3'
    compile group: 'org.json', name: 'json', version: '20190722'

    compile 'khttp:khttp:0.1.0'

    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.2'


}


tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}
